install
cdrom

lang en_US.UTF-8
keyboard us
timezone --utc Etc/UTC

cmdline

network --device eth0 --bootproto dhcp

firewall --disabled
selinux --disabled
authconfig --enableshadow --passalgo=sha512

zerombr
bootloader --location=mbr --driveorder=sda --append="clocksource_failover=acpi_pm"

clearpart --all --initlabel --drives=sda,sdb
part / --ondisk sda --grow --size 2000 --asprimary --fstype=ext4
part swap --ondisk sdb --grow --size 100

firstboot --disabled

rootpw --plaintext vagrant

reboot

%packages --instLangs=en_US.utf8  --excludedocs --nobase
gcc
kernel-devel
make
perl
yum-plugin-versionlock
sudo
nfs-utils
-efibootmgr
-aic94xx-firmware
-atmel-firmware
-b43-openfwwf
-bfa-firmware
-ipw2100-firmware
-ipw2200-firmware
-ivtv-firmware
-iwl100-firmware
-iwl1000-firmware
-iwl3945-firmware
-iwl4965-firmware
-iwl5000-firmware
-iwl5150-firmware
-iwl6000-firmware
-iwl6000g2a-firmware
-iwl6050-firmware
-libertas-usb8388-firmware
-ql2100-firmware
-ql2200-firmware
-ql23xx-firmware
-ql2400-firmware
-ql2500-firmware
-rt61pci-firmware
-rt73usb-firmware
-iwl7260-firmware
-iwl7265-firmware
-xorg-x11-drv-ati-firmware
-zd1211-firmware
%end

%post --log=/root/install-post.log

set -x

echo %_install_langs en_US.utf8 >> /etc/rpm/macros

# No fsck at boot
sed -i -r 's/(defaults\s+)1 1/\10 0/' /etc/fstab

# Create vagrant user
groupadd vagrant
useradd vagrant -g vagrant -G wheel
echo "vagrant" | passwd --stdin vagrant

# Install vagrant keys
mkdir -p /home/vagrant/.ssh

cat <<EOM >/home/vagrant/.ssh/authorized_keys
ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8Y\
Vr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdO\
KLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7Pt\
ixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmC\
P3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcW\
yLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key
EOM

chown -R vagrant:vagrant /home/vagrant/.ssh
chmod -R u=rwX,go= /home/vagrant/.ssh


# Import key first so that yum doesn't complain later.
rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6

sed -i '/.*requiretty/d' /etc/sudoers
echo '%wheel ALL=NOPASSWD: ALL' >> /etc/sudoers

# Squash the delay on boot
sed -i '/splashimage/d;s_timeout.*$_timeout=0_;s/ rhgb quiet//g' \
    /boot/grub/grub.conf

# Hotplug always tries to load this and it doesn't play well with
# VirtualBox. Always complains to upgrade BIOS.
echo 'blacklist i2c_piix4' >>/etc/modprobe.d/blacklist.conf


# Setup network devices.
rm /etc/udev/rules.d/70-persistent-net.rules
echo '#' >/etc/udev/rules.d/75-persistent-net-generator.rules
cat <<EOM >/etc/sysconfig/network
HOSTNAME=vagrant-centos65.vagrantup.com
NETWORKING=yes
EOM

cat <<EOM >/etc/sysconfig/network-scripts/ifcfg-eth0
BOOTPROTO=dhcp
DEVICE=eth0
DHCP_HOSTNAME=vagrant-centos65.vagrantup.com
IPV6INIT=yes
NM_CONTROLLED=no
ONBOOT=yes
TYPE=Ethernet
EOM

echo "options single-request-reopen" >>/etc/resolv.conf

cat <<EOM >>/etc/hosts
127.0.0.1   vagrant-centos62.vagrantup.com vagrant-centos62
::1         vagrant-centos62.vagrantup.com vagrant-centos62
EOM

sed -i -r 's/#(UseDNS).*/\1 no/' /etc/ssh/sshd_config

chkconfig --level 2345 auditd off
chkconfig --level 2345 crond off
chkconfig --level  345 netfs off
chkconfig --level  345 nfslock off
chkconfig --level 2345 rpcbind off
chkconfig --level  345 rpcgssd off
chkconfig --level  345 rpcidmapd off
chkconfig --level 2345 sshd off

# Delete language support.
rm -rf /usr/share/locale/*/LC_MESSAGES/

localedef --list-archive | \
    grep -vE '^en_US.*' | \
    xargs localedef --delete-from-archive

mv /usr/lib/locale/locale-archive /usr/lib/locale/locale-archive.tmpl
build-locale-archive


# After this cat reboot to that latest kernel, install Guest Additions
# and clean up the system so that it can be packed down.
# This section is weird as you need to escape $, `, \, etc.
cat <<EOM >/etc/rc.local
#!/bin/sh -x

touch /var/lock/subsys/local

# VirtualBox Guest Additions
# The "Window System drivers" step will fail which is fine because we
# don't have Xorg
mount -o loop \`find /dev/disk/by-label | grep VBOXADDITIONS\` /mnt/
/mnt/VBoxLinuxAdditions.run
chkconfig vboxadd-x11 off
umount /mnt/


# Rebuild the initrd to include only what's needed.
dracut -f -H


yum clean all  # Remove yum's cache files.
rpm --rebuilddb


sleep 10 # Give postfix a bit of time to send the email.
service postfix stop # Kill postfix so we can clear logs.

rm -f /var/log/dmesg.old /var/log/anaconda.ifcfg.log \\
      /var/log/anaconda.log /var/log/anaconda.program.log \\
      /var/log/anaconda.storage.log /var/log/anaconda.syslog \\
      /var/log/anaconda.yum.log /root/anaconda-ks.cfg \\
      /var/log/vboxadd-install.log /var/log/vbox-install-x11.log \\
      /var/log/VBoxGuestAdditions.log /var/log/vboxadd-install-x11.log
echo -n | tee /var/log/dmesg /var/log/maillog /var/log/lastlog \\
              /var/log/secure /var/log/yum.log >/var/log/cron

chkconfig --level 2345 auditd on
chkconfig --level 2345 crond on
chkconfig --level  345 netfs on
chkconfig --level  345 nfslock on
chkconfig --level 2345 rpcbind on
chkconfig --level  345 rpcgssd on
chkconfig --level  345 rpcidmapd on
chkconfig --level 2345 sshd on

rm -rf /tmp/* /tmp/.[^.]+
dd if=/dev/zero of=/tmp/clean bs=1M || rm -f /tmp/clean


swapuuid=\`blkid -o value -l -s UUID -t TYPE=swap\`
swappart=\`readlink -f /dev/disk/by-uuid/\$swapuuid\`

swapoff \$swappart
dd if=/dev/zero of=\$swappart bs=1M
mkswap -U \$swapuuid \$swappart


cat <<EOF >/etc/rc.local && poweroff
#!/bin/sh

touch /var/lock/subsys/local
EOF

EOM